on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build all
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    steps:
      - name: Checkout HEAD
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          # terget: ${{ matrix.target }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - run: rustup target add ${{ matrix.target }}
      # - name: Set env
      #   run: |
      #     echo ${{  }} >> TARGET_CC \
      #     TARGET_AR=arm-linux-gnueabihf-gcc-ar

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Compress release files
        run: |
          zip --junk-paths gratex-${{ matrix.target }} target/${{ matrix.target }}/release/gratex{,.exe}
      - uses: actions/upload-artifact@v1
        with:
          name: build-${{ matrix.target }}
          path: gratex-${{ matrix.target }}.zip

  create-release:
    name: Create Github Release
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Create a GitHub release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - run: |
          echo '${{ steps.create-release.outputs.upload_url }}' > release_upload_url.txt
      - uses: actions/upload-artifact@v1
        with:
          name: create-release
          path: release_upload_url.txt

  upload-assets:
    name: Create Github Release
    needs:
      - create-release
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - name: Fetch meta artifacts
        uses: actions/download-artifact@v1
        with:
          name: create-release
      - name: Extract an upload URL
        id: upload-url
        run: |
          echo "::set-output name=url::$(cat create-release/release_upload_url.txt)"
      - name: Download actual artifacts
        uses: actions/download-artifact@v1
        with:
          name: build-${{ matrix.target }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload-url.outputs.url }}
          asset_name: build-${{ matrix.target }}.zip
          asset_path: build-${{ matrix.target }}/gratex-${{ matrix.target }}.zip
          asset_content_type: application/zip
